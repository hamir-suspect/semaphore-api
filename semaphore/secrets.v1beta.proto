syntax = "proto3";

package semaphore.secrets.v1beta;

option go_package = "./secrets.v1beta;semaphore_secrets_v1beta";

service SecretsApi {
  rpc ListSecrets(ListSecretsRequest) returns (ListSecretsResponse);
  rpc GetSecret(GetSecretRequest) returns (Secret);
  rpc CreateSecret(Secret) returns (Secret);
  rpc UpdateSecret(UpdateSecretRequest) returns (Secret);
  rpc DeleteSecret(DeleteSecretRequest) returns (Empty);
}

message Secret {
  message Metadata {
    string name = 1;
    string id = 2;

    int64 create_time = 3; // unix timestamp of secret creation
    int64 update_time = 4; // unix timestamp of last update
  }

  message EnvVar {
    string name = 1;
    string value = 2;
  }

  message File {
    string path = 1;
    string content = 2;
  }

  message Data {
    repeated EnvVar env_vars = 1;
    repeated File files = 2;
  }

  message Permissions {
    enum Projects {
      ALL = 0;
      WHITELIST = 1;
      NONE = 2;
    }
    Projects allowed_for = 1;
    repeated string project_ids = 2;
  }

  Metadata metadata = 1;
  Data data = 2;
  Permissions permissions= 3;
}

message ListSecretsRequest {
  enum Order {
    BY_NAME_ASC = 0;
    BY_CREATE_TIME_ASC = 1;
  }

  int32 page_size = 1;
  string page_token = 2;
  Order order = 3;
  string project_id = 4;
}

message ListSecretsResponse {
  repeated Secret secrets = 1;

  string next_page_token = 2;
}

message GetSecretRequest {
  string secret_id_or_name = 1;
}

message UpdateSecretRequest {
  string secret_id_or_name = 1;

  Secret secret = 2;
}

message DeleteSecretRequest {
  string secret_id_or_name = 1;
}

message Empty {}
