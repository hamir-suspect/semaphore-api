syntax = "proto3";

package semaphore.notifications.v1alpha;

service NotificationsApi {
  rpc ListNotifications(ListNotificatiosRequest) returns (ListNotificationsResponse);
  rpc GetNotification(GetNotificationRequest) returns (Notification);
  rpc CreateNotification(Notification) returns (Notification);
  rpc UpdateNotification(UpdateNotificationRequest) returns (Notification);
  rpc DeleteNotification(DeleteNotificationRequest) returns (Empty);
}

message Notification {
  message Metadata {
    string name = 1;
    string id = 2;

    int64 create_time = 3; // unix timestamp of creation
    int64 update_time = 4; // unix timestamp of last update
  }

  message Spec {
    message Rule {
      enum Type {
        SLACK = 0;
        EMAIL = 1;
      }
    }

    repeated Rule rules = 1;
  }

  message Status {
    message Failure {
      int64 time = 1; // unix timestamp of failure occurance
      string msg = 2; // message describing the failure
    }

    // Lists the 100 most recent notification failures
    repeated Failure failures = 1;
  }

  Metadata metadata = 1;
  Spec spec = 2;
  Status status = 3;
}

message ListNotificationsRequest {
  enum Order {
    BY_NAME_ASC = 0;
  }

  int32 page_size = 1;
  string page_token = 2;
  Order order = 3;
}

message ListNotificationsResponse {
  repeated Notification notifications = 1;

  string next_page_token = 2;
}

message GetNotificationRequest {
  string notification_id_or_name = 1;
}

message UpdateNotificationRequest {
  string notification_id_or_name = 1;

  Notification notification = 2;
}

message DeleteNotificationRequest {
  string notification_id_or_name = 1;
}

message Empty {}
